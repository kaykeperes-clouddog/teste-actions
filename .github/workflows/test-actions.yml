name: Terraform Security Check with Checkov

# Dispara o workflow em todo push para a branch 'main'
on:
  push:
    branches: [ main ]

permissions:
  contents: read # Apenas leitura do repositório

jobs:
  checkov-scan:
    # Nome do Job
    name: Run Checkov Security Scan
    
    # Diz ao GitHub Actions para usar seu projeto CodeBuild como a máquina (runner)
    runs-on: codebuild-checkov-validate-${{ github.run_id }}-${{ github.run_attempt }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar Dependências (Checkov e JQ)
        run: |
          pip install checkov
          # O 'jq' é necessário para ler a resposta JSON do assume-role
          # A imagem do CodeBuild é baseada em Ubuntu, então usamos apt-get
          yum install -y jq

      - name: Assumir Role da conta PRD e exportar credenciais
        run: |
          echo "Assumindo a role da conta PRD..."
          # 1. Pede o "crachá de visitante" (Assume Role)
          CREDS=$(aws sts assume-role \
                    --role-arn "arn:aws:iam::977919013454:role/clouddog-checkov-prd-role" \
                    --role-session-name "CheckovGitHubActionSession")
          
          # 2. Configura o AWS CLI para USAR esse crachá nos próximos passos
          #    Usamos $GITHUB_ENV para passar as variáveis entre os 'steps'
          echo "AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r .Credentials.AccessKeyId)" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r .Credentials.SecretAccessKey)" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $CREDS | jq -r .Credentials.SessionToken)" >> $GITHUB_ENV
          echo "Credenciais temporárias prontas para os próximos passos."
      
      - name: Baixar regras customizadas do S3 (de PRD)
        run: |
          echo "Baixando regras da pasta /checkov/ do bucket S3 de PRD..."
          # Cria o diretório local que o seu comando checkov espera
          mkdir ./checkov_policies
          
          # Baixa o conteúdo da pasta 'checkov' do S3 para o diretório local
          # Este comando usa automaticamente as credenciais temporárias do passo anterior
          aws s3 cp s3://clouddog-checkov-prd-bucket/checkov/ ./checkov_policies --recursive
          echo "Regras baixadas."

      - name: Rodar análise de segurança
        # Este comando irá rodar e, se falhar, fará o Job inteiro falhar
        run: |
          echo "Rodando scan do Checkov com as regras baixadas..."
          checkov -d ./terraform --config-file ${{ github.workspace }}/checkov_policies/.checkov.yml --skip-check CKV_AWS_19,CKV2_AWS_62,CKV2_AWS_6,CKV_AWS_144,CKV_AWS_21,CKV_AWS_145,CKV2_AWS_61,CKV_AWS_18,CKV_AWS_20
